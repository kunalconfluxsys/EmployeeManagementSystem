package com.example.employee_sytem.entity;
import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

import java.util.Set;

/**
 * Entity class representing a department in the system.
 * <p>
 * This class is mapped to the "departments" table in the database and defines the attributes
 * associated with a department.
 * </p>
 */
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@Entity
@Table(name = "departments")
public class Department {

    /**
     * The unique identifier for the department.
     * This field is automatically generated by the database.
     */

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * * The name of the department.
     */
    @Column(name = "name", nullable = false, unique = true)
    private String name;

    /**
     * The description of the department (new field).
     */
    @Column(name = "description")
    private String description;

    // Constructor to initialize the department with id, name, and description
    public Department(Long id, String name, String description) {
        this.id = id;
        this.name = name;
        this.description = description;
    }

    // Convenience method to get the full department information as a string
    public String getFullDepartmentInfo() {
        return name + " - " + description;
    }
    /**
     * The set of employees associated with the department.
     */
    @OneToMany(mappedBy = "department", cascade = CascadeType.ALL, fetch = FetchType.LAZY)
    private Set<Employee> employees;  // Optional: To establish the bidirectional relationship


}

